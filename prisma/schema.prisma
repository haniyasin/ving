// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

generator custom_generator {
  provider = "node ./prisma/ving-schema-generator"
  output   = "../app/db/"
}

datasource db {
  provider          = "mysql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

/// @ving.owner: $id
model User {
  /// @ving.viewBy: public
  id               String           @id @default(uuid())
  /// @ving.viewBy: public
  createdAt        DateTime         @default(now())
  /// @ving.viewBy: public
  updatedAt        DateTime         @default(now()) @updatedAt
  /// @ving.editBy: owner
  username         String           @unique
  /// @ving.editBy: owner
  email            String           @unique
  password         String?
  passwordType     passwordTypes    @default(bcrypt)
  /// @ving.editBy: owner
  realName         String?
  /// @ving.editBy: owner
  useAsDisplayName displayNameTypes @default(username)
  /// @ving.viewBy: owner
  /// @ving.editBy: admin
  /// @ving.labels: Admin, Not Admin
  admin            Boolean          @default(false)
  /// @ving.viewBy: owner
  /// @ving.editBy: owner
  /// @ving.labels: Software Developer, Not Software Developer
  developer        Boolean          @default(false)
  /// @ving.viewBy: owner
  apiKeys          APIKey[]
}

/// @ving.labels: B-Crypt
enum passwordTypes {
  bcrypt
}

/// @ving.labels: Username, Real Name, Email Address
enum displayNameTypes {
  username
  realName
  email
}

/// @ving.owner: $userId
model APIKey {
  /// @ving.viewBy: public
  id         String   @id @default(uuid())
  /// @ving.viewBy: public
  createdAt  DateTime @default(now())
  /// @ving.viewBy: public
  updatedAt  DateTime @default(now()) @updatedAt
  /// @ving.viewBy: public
  /// @ving.editBy: owner
  name       String
  /// @ving.editBy: owner
  url        String?
  /// @ving.editBy: owner
  reason     String?
  /// @ving.viewBy: owner
  privateKey String?
  /// @ving.viewBy: public
  userId     String
  /// @ving.viewBy: public
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
